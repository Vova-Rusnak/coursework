
1. ЩО ВМІЄ ПРОГРАМА (ОСНОВНІ МОЖЛИВОСТІ)

ШІ аналіз зображень:
Користувачі можуть завантажувати зображення (фотографії) ймовірних проблемних ділянок шкіри або інших видимих симптомів.
Програма використовує сучасну модель штучного інтелекту (Google Gemini) для аналізу цих зображень.
За результатами аналізу програма надає список з 2-3 найбільш ймовірних, на думку ШІ, станів або захворювань українською мовою.

Довідник захворювань:
Програма містить окрему сторінку "Довідник захворювань".
На цій сторінці представлена інформація про різні захворювання (на даний момент 15), включаючи їх описи, основні симптоми та загальні підходи до лікування.
Це допомагає користувачам отримати додаткову інформацію про стани, запропоновані ШІ, або просто ознайомитися з різними захворюваннями.

Посилання на зовнішні ресурси:
Для кожного запропонованого ШІ стану надається кнопка "Дізнатися більше".
Ця кнопка веде на зовнішній авторитетний медичний ресурс (або пошуковий запит за назвою захворювання), де користувач може знайти більш детальну інформацію.

Інформаційна підтримка:
Програма надає чіткі інструкції щодо використання та нагадування про те, що результати не є медичним діагнозом.

2. ЩО ПОТРІБНО ПРОГРАМІ ДЛЯ РОБОТИ

API Ключ Google Gemini (ОБОВ'ЯЗКОВО для ШІ аналізу):
Серцем програми є модель штучного інтелекту Gemini від Google. Для її використання необхідний API ключ.
Рекомендований та основний спосіб налаштування (для розробників/адміністраторів):
1.  Отримайте API ключ у Google AI Studio (https://aistudio.google.com/app/apikey).
2.  У кореневій папці проекту (там, де знаходиться файл package.json) необхідно створити файл з ім'ям .env. Якщо такий файл вже існує, відкрийте його.
3.  Додайте у файл .env наступний рядок, замінивши ВАШ_API_КЛЮЧ_ТУТ на ваш діючий ключ:
    GOOGLE_API_KEY=ВАШ_API_КЛЮЧ_ТУТ
4.  КРИТИЧНО ВАЖЛИВО: Після збереження файлу .env необхідно ПОВНІСТЮ ПЕРЕЗАПУСТИТИ СЕРВЕР РОЗРОБКИ. Зазвичай це робиться командою Ctrl+C (або Cmd+C на Mac) у терміналі, де запущений сервер, а потім знову командами npm run dev (для веб сервера) та npm run genkit:dev (для сервера Genkit AI). Без перезапуску сервер не побачить новий ключ.

Альтернативний спосіб (менш безпечний, з обмеженнями):
На головній сторінці є кнопка "Ввести/Переглянути API ключ (для браузера)".
Цей спосіб дозволяє користувачеві ввести API ключ, який буде збережено лише в локальному сховищі поточного браузера користувача.
Важливо: Ключ, збережений таким чином, НЕ БУДЕ автоматично використовуватися для поточної серверної ШІ діагностики. Він може бути використаний для майбутніх функцій, що працюють повністю на стороні клієнта, якщо такі будуть розроблені. Поточний ШІ аналіз вимагає налаштування ключа через файл .env.

Інтернет з'єднання: Для завантаження зображень, зв'язку з ШІ моделлю та доступу до зовнішніх ресурсів.
Сучасний веб браузер: Для коректного відображення та роботи інтерфейсу.

3. ЯК ПРОГРАМА ПРАЦЮЄ (ТЕХНІЧНА СТОРОНА)

Технологічний стек:
Next.js: Сучасний фреймворк для створення веб програм на базі React. Забезпечує швидке завантаження та хорошу продуктивність.
React: Бібліотека JavaScript для побудови користувацьких інтерфейсів.
TailwindCSS: Утилітарний CSS фреймворк для швидкої та гнучкої стилізації.
ShadCN UI: Колекція готових UI компонентів, побудованих на TailwindCSS та Radix UI.
Genkit (Firebase): Інструментарій для розробки та інтеграції функцій на базі генеративного ШІ. Використовується для взаємодії з моделлю Gemini.
Google Gemini: Просунута мультимодальна модель штучного інтелекту від Google, здатна аналізувати зображення та текст.

Процес ШІ аналізу:
1.  Завантаження зображення: Користувач обирає зображення через форму на головній сторінці.
2.  Підготовка даних: Зображення кодується у формат Base64 (текстове представлення зображення).
3.  Відправка на сервер: Дані зображення (у форматі Base64) відправляються на серверну частину програми (через Next.js Server Action).
4.  Виклик ШІ моделі: Серверна частина через Genkit звертається до моделі Google Gemini, передаючи їй зображення та промпт (інструкцію) для аналізу. Промпт просить модель ідентифікувати 2-3 найбільш ймовірних захворювання українською мовою на основі візуальних ознак.
5.  Отримання відповіді від ШІ: Модель Gemini аналізує зображення та повертає список припущених станів.
6.  Відображення результату: Серверна частина передає отриманий список назад у браузер користувача, де він відображається у спеціальній картці.

Безпека API ключа (при використанні .env): API ключ, вказаний у файлі .env, використовується лише на серверній стороні і не передається в браузер користувача, що забезпечує його безпеку.

4. ВАЖЛИВЕ НАГАДУВАННЯ (ВІДМОВА ВІД ВІДПОВІДАЛЬНОСТІ)

Diagnosify призначений виключно для інформаційних та освітніх цілей.
Надані ШІ припущення НЕ Є МЕДИЧНИМ ДІАГНОЗОМ.
Цей інструмент НЕ ЗАМІНЮЄ КОНСУЛЬТАЦІЮ з кваліфікованим медичним працівником.
При будь яких проблемах зі здоров'ям, для отримання точної діагностики, призначення лікування та професійної медичної допомоги ЗАВЖДИ ЗВЕРТАЙТЕСЯ ДО ЛІКАРЯ.
Не займайтеся самодіагностикою або самолікуванням на основі інформації, отриманої від цієї програми.

5. МОЖЛИВІ ПРОБЛЕМИ ТА ЗАУВАЖЕННЯ

Розмір завантажуваних зображень: Поточний ліміт на розмір завантажуваного файлу становить 10 МБ. Однак дуже великі зображення (близькі до цього ліміту) після кодування в Base64 можуть стати занадто об'ємними для передачі на сервер, що може призвести до помилки аналізу. Рекомендується використовувати зображення оптимального розміру, достатнього для чіткого відображення симптомів.
Якість зображень: Для найкращого результату аналізу ШІ, фотографії мають бути чіткими, добре освітленими, сфокусованими на проблемній ділянці.
Точність ШІ: Моделі ШІ постійно вдосконалюються, але вони не безпомилкові. Результати слід сприймати як припущення, що потребують підтвердження у спеціаліста.
Доступність API Gemini: Робота ШІ функцій залежить від доступності сервісів Google Cloud та правильності API ключа.


